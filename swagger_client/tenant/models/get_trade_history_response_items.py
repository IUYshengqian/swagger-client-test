# coding: utf-8

"""
    crush-tenant 平台接口(租户平台)

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetTradeHistoryResponseItems(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'created_at': 'datetime',
        'buyer_exchange_id': 'str',
        'seller_exchange_id': 'str',
        'trade_history_id': 'str',
        'trading_pair': 'str',
        'price': 'str',
        'volume': 'str',
        'trade_amount': 'str',
        'buyer_fee': 'str',
        'seller_fee': 'str',
        'buyer_uid': 'str',
        'seller_uid': 'str'
    }

    attribute_map = {
        'created_at': 'createdAt',
        'buyer_exchange_id': 'buyerExchangeId',
        'seller_exchange_id': 'sellerExchangeId',
        'trade_history_id': 'tradeHistoryId',
        'trading_pair': 'tradingPair',
        'price': 'price',
        'volume': 'volume',
        'trade_amount': 'tradeAmount',
        'buyer_fee': 'buyerFee',
        'seller_fee': 'sellerFee',
        'buyer_uid': 'buyerUid',
        'seller_uid': 'sellerUid'
    }

    def __init__(self, created_at=None, buyer_exchange_id=None, seller_exchange_id=None, trade_history_id=None, trading_pair=None, price=None, volume=None, trade_amount=None, buyer_fee=None, seller_fee=None, buyer_uid=None, seller_uid=None):  # noqa: E501
        """GetTradeHistoryResponseItems - a model defined in Swagger"""  # noqa: E501

        self._created_at = None
        self._buyer_exchange_id = None
        self._seller_exchange_id = None
        self._trade_history_id = None
        self._trading_pair = None
        self._price = None
        self._volume = None
        self._trade_amount = None
        self._buyer_fee = None
        self._seller_fee = None
        self._buyer_uid = None
        self._seller_uid = None
        self.discriminator = None

        if created_at is not None:
            self.created_at = created_at
        if buyer_exchange_id is not None:
            self.buyer_exchange_id = buyer_exchange_id
        if seller_exchange_id is not None:
            self.seller_exchange_id = seller_exchange_id
        if trade_history_id is not None:
            self.trade_history_id = trade_history_id
        if trading_pair is not None:
            self.trading_pair = trading_pair
        if price is not None:
            self.price = price
        if volume is not None:
            self.volume = volume
        if trade_amount is not None:
            self.trade_amount = trade_amount
        if buyer_fee is not None:
            self.buyer_fee = buyer_fee
        if seller_fee is not None:
            self.seller_fee = seller_fee
        if buyer_uid is not None:
            self.buyer_uid = buyer_uid
        if seller_uid is not None:
            self.seller_uid = seller_uid

    @property
    def created_at(self):
        """Gets the created_at of this GetTradeHistoryResponseItems.  # noqa: E501

        成交时间  # noqa: E501

        :return: The created_at of this GetTradeHistoryResponseItems.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GetTradeHistoryResponseItems.

        成交时间  # noqa: E501

        :param created_at: The created_at of this GetTradeHistoryResponseItems.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def buyer_exchange_id(self):
        """Gets the buyer_exchange_id of this GetTradeHistoryResponseItems.  # noqa: E501

        买方交易所ID  # noqa: E501

        :return: The buyer_exchange_id of this GetTradeHistoryResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._buyer_exchange_id

    @buyer_exchange_id.setter
    def buyer_exchange_id(self, buyer_exchange_id):
        """Sets the buyer_exchange_id of this GetTradeHistoryResponseItems.

        买方交易所ID  # noqa: E501

        :param buyer_exchange_id: The buyer_exchange_id of this GetTradeHistoryResponseItems.  # noqa: E501
        :type: str
        """

        self._buyer_exchange_id = buyer_exchange_id

    @property
    def seller_exchange_id(self):
        """Gets the seller_exchange_id of this GetTradeHistoryResponseItems.  # noqa: E501

        卖方交易所ID  # noqa: E501

        :return: The seller_exchange_id of this GetTradeHistoryResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._seller_exchange_id

    @seller_exchange_id.setter
    def seller_exchange_id(self, seller_exchange_id):
        """Sets the seller_exchange_id of this GetTradeHistoryResponseItems.

        卖方交易所ID  # noqa: E501

        :param seller_exchange_id: The seller_exchange_id of this GetTradeHistoryResponseItems.  # noqa: E501
        :type: str
        """

        self._seller_exchange_id = seller_exchange_id

    @property
    def trade_history_id(self):
        """Gets the trade_history_id of this GetTradeHistoryResponseItems.  # noqa: E501

        成交记录编号  # noqa: E501

        :return: The trade_history_id of this GetTradeHistoryResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._trade_history_id

    @trade_history_id.setter
    def trade_history_id(self, trade_history_id):
        """Sets the trade_history_id of this GetTradeHistoryResponseItems.

        成交记录编号  # noqa: E501

        :param trade_history_id: The trade_history_id of this GetTradeHistoryResponseItems.  # noqa: E501
        :type: str
        """

        self._trade_history_id = trade_history_id

    @property
    def trading_pair(self):
        """Gets the trading_pair of this GetTradeHistoryResponseItems.  # noqa: E501

        市场  # noqa: E501

        :return: The trading_pair of this GetTradeHistoryResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._trading_pair

    @trading_pair.setter
    def trading_pair(self, trading_pair):
        """Sets the trading_pair of this GetTradeHistoryResponseItems.

        市场  # noqa: E501

        :param trading_pair: The trading_pair of this GetTradeHistoryResponseItems.  # noqa: E501
        :type: str
        """

        self._trading_pair = trading_pair

    @property
    def price(self):
        """Gets the price of this GetTradeHistoryResponseItems.  # noqa: E501

        成交价格  # noqa: E501

        :return: The price of this GetTradeHistoryResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this GetTradeHistoryResponseItems.

        成交价格  # noqa: E501

        :param price: The price of this GetTradeHistoryResponseItems.  # noqa: E501
        :type: str
        """

        self._price = price

    @property
    def volume(self):
        """Gets the volume of this GetTradeHistoryResponseItems.  # noqa: E501

        成交数量  # noqa: E501

        :return: The volume of this GetTradeHistoryResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._volume

    @volume.setter
    def volume(self, volume):
        """Sets the volume of this GetTradeHistoryResponseItems.

        成交数量  # noqa: E501

        :param volume: The volume of this GetTradeHistoryResponseItems.  # noqa: E501
        :type: str
        """

        self._volume = volume

    @property
    def trade_amount(self):
        """Gets the trade_amount of this GetTradeHistoryResponseItems.  # noqa: E501

        成交金额  # noqa: E501

        :return: The trade_amount of this GetTradeHistoryResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._trade_amount

    @trade_amount.setter
    def trade_amount(self, trade_amount):
        """Sets the trade_amount of this GetTradeHistoryResponseItems.

        成交金额  # noqa: E501

        :param trade_amount: The trade_amount of this GetTradeHistoryResponseItems.  # noqa: E501
        :type: str
        """

        self._trade_amount = trade_amount

    @property
    def buyer_fee(self):
        """Gets the buyer_fee of this GetTradeHistoryResponseItems.  # noqa: E501

        买方手续费  # noqa: E501

        :return: The buyer_fee of this GetTradeHistoryResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._buyer_fee

    @buyer_fee.setter
    def buyer_fee(self, buyer_fee):
        """Sets the buyer_fee of this GetTradeHistoryResponseItems.

        买方手续费  # noqa: E501

        :param buyer_fee: The buyer_fee of this GetTradeHistoryResponseItems.  # noqa: E501
        :type: str
        """

        self._buyer_fee = buyer_fee

    @property
    def seller_fee(self):
        """Gets the seller_fee of this GetTradeHistoryResponseItems.  # noqa: E501

        卖方手续费  # noqa: E501

        :return: The seller_fee of this GetTradeHistoryResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._seller_fee

    @seller_fee.setter
    def seller_fee(self, seller_fee):
        """Sets the seller_fee of this GetTradeHistoryResponseItems.

        卖方手续费  # noqa: E501

        :param seller_fee: The seller_fee of this GetTradeHistoryResponseItems.  # noqa: E501
        :type: str
        """

        self._seller_fee = seller_fee

    @property
    def buyer_uid(self):
        """Gets the buyer_uid of this GetTradeHistoryResponseItems.  # noqa: E501

        买方UID  # noqa: E501

        :return: The buyer_uid of this GetTradeHistoryResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._buyer_uid

    @buyer_uid.setter
    def buyer_uid(self, buyer_uid):
        """Sets the buyer_uid of this GetTradeHistoryResponseItems.

        买方UID  # noqa: E501

        :param buyer_uid: The buyer_uid of this GetTradeHistoryResponseItems.  # noqa: E501
        :type: str
        """

        self._buyer_uid = buyer_uid

    @property
    def seller_uid(self):
        """Gets the seller_uid of this GetTradeHistoryResponseItems.  # noqa: E501

        卖方ID  # noqa: E501

        :return: The seller_uid of this GetTradeHistoryResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._seller_uid

    @seller_uid.setter
    def seller_uid(self, seller_uid):
        """Sets the seller_uid of this GetTradeHistoryResponseItems.

        卖方ID  # noqa: E501

        :param seller_uid: The seller_uid of this GetTradeHistoryResponseItems.  # noqa: E501
        :type: str
        """

        self._seller_uid = seller_uid

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetTradeHistoryResponseItems, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetTradeHistoryResponseItems):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
