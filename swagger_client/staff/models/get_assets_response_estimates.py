# coding: utf-8

"""
    crush-staff 平台接口（职员管理平台）

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetAssetsResponseEstimates(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'total_usdt': 'str',
        'total_cny': 'str',
        'balance_usdt': 'str',
        'balance_cny': 'str',
        'frozen_usdt': 'str',
        'frozen_cny': 'str'
    }

    attribute_map = {
        'total_usdt': 'totalUsdt',
        'total_cny': 'totalCny',
        'balance_usdt': 'balanceUsdt',
        'balance_cny': 'balanceCny',
        'frozen_usdt': 'frozenUsdt',
        'frozen_cny': 'frozenCny'
    }

    def __init__(self, total_usdt=None, total_cny=None, balance_usdt=None, balance_cny=None, frozen_usdt=None, frozen_cny=None):  # noqa: E501
        """GetAssetsResponseEstimates - a model defined in Swagger"""  # noqa: E501

        self._total_usdt = None
        self._total_cny = None
        self._balance_usdt = None
        self._balance_cny = None
        self._frozen_usdt = None
        self._frozen_cny = None
        self.discriminator = None

        if total_usdt is not None:
            self.total_usdt = total_usdt
        if total_cny is not None:
            self.total_cny = total_cny
        if balance_usdt is not None:
            self.balance_usdt = balance_usdt
        if balance_cny is not None:
            self.balance_cny = balance_cny
        if frozen_usdt is not None:
            self.frozen_usdt = frozen_usdt
        if frozen_cny is not None:
            self.frozen_cny = frozen_cny

    @property
    def total_usdt(self):
        """Gets the total_usdt of this GetAssetsResponseEstimates.  # noqa: E501

        总额usdt  # noqa: E501

        :return: The total_usdt of this GetAssetsResponseEstimates.  # noqa: E501
        :rtype: str
        """
        return self._total_usdt

    @total_usdt.setter
    def total_usdt(self, total_usdt):
        """Sets the total_usdt of this GetAssetsResponseEstimates.

        总额usdt  # noqa: E501

        :param total_usdt: The total_usdt of this GetAssetsResponseEstimates.  # noqa: E501
        :type: str
        """

        self._total_usdt = total_usdt

    @property
    def total_cny(self):
        """Gets the total_cny of this GetAssetsResponseEstimates.  # noqa: E501

        总额cny  # noqa: E501

        :return: The total_cny of this GetAssetsResponseEstimates.  # noqa: E501
        :rtype: str
        """
        return self._total_cny

    @total_cny.setter
    def total_cny(self, total_cny):
        """Sets the total_cny of this GetAssetsResponseEstimates.

        总额cny  # noqa: E501

        :param total_cny: The total_cny of this GetAssetsResponseEstimates.  # noqa: E501
        :type: str
        """

        self._total_cny = total_cny

    @property
    def balance_usdt(self):
        """Gets the balance_usdt of this GetAssetsResponseEstimates.  # noqa: E501

        余额usdt  # noqa: E501

        :return: The balance_usdt of this GetAssetsResponseEstimates.  # noqa: E501
        :rtype: str
        """
        return self._balance_usdt

    @balance_usdt.setter
    def balance_usdt(self, balance_usdt):
        """Sets the balance_usdt of this GetAssetsResponseEstimates.

        余额usdt  # noqa: E501

        :param balance_usdt: The balance_usdt of this GetAssetsResponseEstimates.  # noqa: E501
        :type: str
        """

        self._balance_usdt = balance_usdt

    @property
    def balance_cny(self):
        """Gets the balance_cny of this GetAssetsResponseEstimates.  # noqa: E501

        余额cny  # noqa: E501

        :return: The balance_cny of this GetAssetsResponseEstimates.  # noqa: E501
        :rtype: str
        """
        return self._balance_cny

    @balance_cny.setter
    def balance_cny(self, balance_cny):
        """Sets the balance_cny of this GetAssetsResponseEstimates.

        余额cny  # noqa: E501

        :param balance_cny: The balance_cny of this GetAssetsResponseEstimates.  # noqa: E501
        :type: str
        """

        self._balance_cny = balance_cny

    @property
    def frozen_usdt(self):
        """Gets the frozen_usdt of this GetAssetsResponseEstimates.  # noqa: E501

        冻结usdt  # noqa: E501

        :return: The frozen_usdt of this GetAssetsResponseEstimates.  # noqa: E501
        :rtype: str
        """
        return self._frozen_usdt

    @frozen_usdt.setter
    def frozen_usdt(self, frozen_usdt):
        """Sets the frozen_usdt of this GetAssetsResponseEstimates.

        冻结usdt  # noqa: E501

        :param frozen_usdt: The frozen_usdt of this GetAssetsResponseEstimates.  # noqa: E501
        :type: str
        """

        self._frozen_usdt = frozen_usdt

    @property
    def frozen_cny(self):
        """Gets the frozen_cny of this GetAssetsResponseEstimates.  # noqa: E501

        冻结cny  # noqa: E501

        :return: The frozen_cny of this GetAssetsResponseEstimates.  # noqa: E501
        :rtype: str
        """
        return self._frozen_cny

    @frozen_cny.setter
    def frozen_cny(self, frozen_cny):
        """Sets the frozen_cny of this GetAssetsResponseEstimates.

        冻结cny  # noqa: E501

        :param frozen_cny: The frozen_cny of this GetAssetsResponseEstimates.  # noqa: E501
        :type: str
        """

        self._frozen_cny = frozen_cny

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetAssetsResponseEstimates, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetAssetsResponseEstimates):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
