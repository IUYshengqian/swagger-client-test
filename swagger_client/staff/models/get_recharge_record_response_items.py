# coding: utf-8

"""
    crush-staff 平台接口（职员管理平台）

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetRechargeRecordResponseItems(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'coin_id': 'str',
        'short_name': 'str',
        'logo': 'str',
        'confirmation_number': 'int',
        'created_at': 'datetime',
        'completed_at': 'datetime',
        'account_id': 'str',
        'amount': 'str',
        'address': 'str',
        'txid': 'str',
        'status': 'str',
        'confirmed_times': 'int'
    }

    attribute_map = {
        'id': 'id',
        'coin_id': 'coinId',
        'short_name': 'shortName',
        'logo': 'logo',
        'confirmation_number': 'confirmationNumber',
        'created_at': 'createdAt',
        'completed_at': 'completedAt',
        'account_id': 'accountId',
        'amount': 'amount',
        'address': 'address',
        'txid': 'txid',
        'status': 'status',
        'confirmed_times': 'confirmedTimes'
    }

    def __init__(self, id=None, coin_id=None, short_name=None, logo=None, confirmation_number=None, created_at=None, completed_at=None, account_id=None, amount=None, address=None, txid=None, status=None, confirmed_times=None):  # noqa: E501
        """GetRechargeRecordResponseItems - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._coin_id = None
        self._short_name = None
        self._logo = None
        self._confirmation_number = None
        self._created_at = None
        self._completed_at = None
        self._account_id = None
        self._amount = None
        self._address = None
        self._txid = None
        self._status = None
        self._confirmed_times = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if coin_id is not None:
            self.coin_id = coin_id
        if short_name is not None:
            self.short_name = short_name
        if logo is not None:
            self.logo = logo
        if confirmation_number is not None:
            self.confirmation_number = confirmation_number
        if created_at is not None:
            self.created_at = created_at
        if completed_at is not None:
            self.completed_at = completed_at
        if account_id is not None:
            self.account_id = account_id
        if amount is not None:
            self.amount = amount
        if address is not None:
            self.address = address
        if txid is not None:
            self.txid = txid
        if status is not None:
            self.status = status
        if confirmed_times is not None:
            self.confirmed_times = confirmed_times

    @property
    def id(self):
        """Gets the id of this GetRechargeRecordResponseItems.  # noqa: E501

        编号  # noqa: E501

        :return: The id of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetRechargeRecordResponseItems.

        编号  # noqa: E501

        :param id: The id of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def coin_id(self):
        """Gets the coin_id of this GetRechargeRecordResponseItems.  # noqa: E501

        币id  # noqa: E501

        :return: The coin_id of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._coin_id

    @coin_id.setter
    def coin_id(self, coin_id):
        """Sets the coin_id of this GetRechargeRecordResponseItems.

        币id  # noqa: E501

        :param coin_id: The coin_id of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: str
        """

        self._coin_id = coin_id

    @property
    def short_name(self):
        """Gets the short_name of this GetRechargeRecordResponseItems.  # noqa: E501

        币简称  # noqa: E501

        :return: The short_name of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this GetRechargeRecordResponseItems.

        币简称  # noqa: E501

        :param short_name: The short_name of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: str
        """

        self._short_name = short_name

    @property
    def logo(self):
        """Gets the logo of this GetRechargeRecordResponseItems.  # noqa: E501

        币Logo  # noqa: E501

        :return: The logo of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this GetRechargeRecordResponseItems.

        币Logo  # noqa: E501

        :param logo: The logo of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: str
        """

        self._logo = logo

    @property
    def confirmation_number(self):
        """Gets the confirmation_number of this GetRechargeRecordResponseItems.  # noqa: E501

        区块确认数  # noqa: E501

        :return: The confirmation_number of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: int
        """
        return self._confirmation_number

    @confirmation_number.setter
    def confirmation_number(self, confirmation_number):
        """Sets the confirmation_number of this GetRechargeRecordResponseItems.

        区块确认数  # noqa: E501

        :param confirmation_number: The confirmation_number of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: int
        """

        self._confirmation_number = confirmation_number

    @property
    def created_at(self):
        """Gets the created_at of this GetRechargeRecordResponseItems.  # noqa: E501

        创建时间  # noqa: E501

        :return: The created_at of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GetRechargeRecordResponseItems.

        创建时间  # noqa: E501

        :param created_at: The created_at of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def completed_at(self):
        """Gets the completed_at of this GetRechargeRecordResponseItems.  # noqa: E501

        完成时间  # noqa: E501

        :return: The completed_at of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: datetime
        """
        return self._completed_at

    @completed_at.setter
    def completed_at(self, completed_at):
        """Sets the completed_at of this GetRechargeRecordResponseItems.

        完成时间  # noqa: E501

        :param completed_at: The completed_at of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: datetime
        """

        self._completed_at = completed_at

    @property
    def account_id(self):
        """Gets the account_id of this GetRechargeRecordResponseItems.  # noqa: E501

        账户Id  # noqa: E501

        :return: The account_id of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GetRechargeRecordResponseItems.

        账户Id  # noqa: E501

        :param account_id: The account_id of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def amount(self):
        """Gets the amount of this GetRechargeRecordResponseItems.  # noqa: E501

        充币数量  # noqa: E501

        :return: The amount of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this GetRechargeRecordResponseItems.

        充币数量  # noqa: E501

        :param amount: The amount of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: str
        """

        self._amount = amount

    @property
    def address(self):
        """Gets the address of this GetRechargeRecordResponseItems.  # noqa: E501

        充币地址  # noqa: E501

        :return: The address of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this GetRechargeRecordResponseItems.

        充币地址  # noqa: E501

        :param address: The address of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def txid(self):
        """Gets the txid of this GetRechargeRecordResponseItems.  # noqa: E501

        交易hash  # noqa: E501

        :return: The txid of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._txid

    @txid.setter
    def txid(self, txid):
        """Sets the txid of this GetRechargeRecordResponseItems.

        交易hash  # noqa: E501

        :param txid: The txid of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: str
        """

        self._txid = txid

    @property
    def status(self):
        """Gets the status of this GetRechargeRecordResponseItems.  # noqa: E501

        充币状态,  # noqa: E501

        :return: The status of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetRechargeRecordResponseItems.

        充币状态,  # noqa: E501

        :param status: The status of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: str
        """
        allowed_values = ["SUCCEED", "FAILED", "CONFIRMING"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"  # noqa: E501
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def confirmed_times(self):
        """Gets the confirmed_times of this GetRechargeRecordResponseItems.  # noqa: E501

        区块确认次数  # noqa: E501

        :return: The confirmed_times of this GetRechargeRecordResponseItems.  # noqa: E501
        :rtype: int
        """
        return self._confirmed_times

    @confirmed_times.setter
    def confirmed_times(self, confirmed_times):
        """Sets the confirmed_times of this GetRechargeRecordResponseItems.

        区块确认次数  # noqa: E501

        :param confirmed_times: The confirmed_times of this GetRechargeRecordResponseItems.  # noqa: E501
        :type: int
        """

        self._confirmed_times = confirmed_times

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetRechargeRecordResponseItems, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetRechargeRecordResponseItems):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
