# coding: utf-8

"""
    crush-staff 平台接口（职员管理平台）

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetCompanyAuditReceiveTasksResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'submitted_at': 'datetime',
        'id': 'str',
        'account_id': 'str',
        'name': 'str',
        'nationality_code': 'str',
        'area': 'str',
        'detailed_address': 'str',
        'logo': 'str',
        'social_number': 'str',
        'tax_number': 'str',
        'institution_number': 'str',
        'license_url': 'str',
        'contact_name': 'str',
        'contact_phone': 'str'
    }

    attribute_map = {
        'submitted_at': 'submittedAt',
        'id': 'id',
        'account_id': 'accountId',
        'name': 'name',
        'nationality_code': 'nationalityCode',
        'area': 'area',
        'detailed_address': 'detailedAddress',
        'logo': 'logo',
        'social_number': 'socialNumber',
        'tax_number': 'taxNumber',
        'institution_number': 'institutionNumber',
        'license_url': 'licenseUrl',
        'contact_name': 'contactName',
        'contact_phone': 'contactPhone'
    }

    def __init__(self, submitted_at=None, id=None, account_id=None, name=None, nationality_code=None, area=None, detailed_address=None, logo=None, social_number=None, tax_number=None, institution_number=None, license_url=None, contact_name=None, contact_phone=None):  # noqa: E501
        """GetCompanyAuditReceiveTasksResponse - a model defined in Swagger"""  # noqa: E501

        self._submitted_at = None
        self._id = None
        self._account_id = None
        self._name = None
        self._nationality_code = None
        self._area = None
        self._detailed_address = None
        self._logo = None
        self._social_number = None
        self._tax_number = None
        self._institution_number = None
        self._license_url = None
        self._contact_name = None
        self._contact_phone = None
        self.discriminator = None

        if submitted_at is not None:
            self.submitted_at = submitted_at
        if id is not None:
            self.id = id
        if account_id is not None:
            self.account_id = account_id
        if name is not None:
            self.name = name
        if nationality_code is not None:
            self.nationality_code = nationality_code
        if area is not None:
            self.area = area
        if detailed_address is not None:
            self.detailed_address = detailed_address
        if logo is not None:
            self.logo = logo
        if social_number is not None:
            self.social_number = social_number
        if tax_number is not None:
            self.tax_number = tax_number
        if institution_number is not None:
            self.institution_number = institution_number
        if license_url is not None:
            self.license_url = license_url
        if contact_name is not None:
            self.contact_name = contact_name
        if contact_phone is not None:
            self.contact_phone = contact_phone

    @property
    def submitted_at(self):
        """Gets the submitted_at of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        提交申请时间  # noqa: E501

        :return: The submitted_at of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._submitted_at

    @submitted_at.setter
    def submitted_at(self, submitted_at):
        """Sets the submitted_at of this GetCompanyAuditReceiveTasksResponse.

        提交申请时间  # noqa: E501

        :param submitted_at: The submitted_at of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: datetime
        """

        self._submitted_at = submitted_at

    @property
    def id(self):
        """Gets the id of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        工单编号  # noqa: E501

        :return: The id of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetCompanyAuditReceiveTasksResponse.

        工单编号  # noqa: E501

        :param id: The id of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def account_id(self):
        """Gets the account_id of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        uid  # noqa: E501

        :return: The account_id of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GetCompanyAuditReceiveTasksResponse.

        uid  # noqa: E501

        :param account_id: The account_id of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def name(self):
        """Gets the name of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        企业名  # noqa: E501

        :return: The name of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetCompanyAuditReceiveTasksResponse.

        企业名  # noqa: E501

        :param name: The name of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def nationality_code(self):
        """Gets the nationality_code of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        国家  # noqa: E501

        :return: The nationality_code of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._nationality_code

    @nationality_code.setter
    def nationality_code(self, nationality_code):
        """Sets the nationality_code of this GetCompanyAuditReceiveTasksResponse.

        国家  # noqa: E501

        :param nationality_code: The nationality_code of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._nationality_code = nationality_code

    @property
    def area(self):
        """Gets the area of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        地区  # noqa: E501

        :return: The area of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._area

    @area.setter
    def area(self, area):
        """Sets the area of this GetCompanyAuditReceiveTasksResponse.

        地区  # noqa: E501

        :param area: The area of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._area = area

    @property
    def detailed_address(self):
        """Gets the detailed_address of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        详细地址  # noqa: E501

        :return: The detailed_address of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._detailed_address

    @detailed_address.setter
    def detailed_address(self, detailed_address):
        """Sets the detailed_address of this GetCompanyAuditReceiveTasksResponse.

        详细地址  # noqa: E501

        :param detailed_address: The detailed_address of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._detailed_address = detailed_address

    @property
    def logo(self):
        """Gets the logo of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        logo图片  # noqa: E501

        :return: The logo of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this GetCompanyAuditReceiveTasksResponse.

        logo图片  # noqa: E501

        :param logo: The logo of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._logo = logo

    @property
    def social_number(self):
        """Gets the social_number of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        统一社会编号  # noqa: E501

        :return: The social_number of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._social_number

    @social_number.setter
    def social_number(self, social_number):
        """Sets the social_number of this GetCompanyAuditReceiveTasksResponse.

        统一社会编号  # noqa: E501

        :param social_number: The social_number of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._social_number = social_number

    @property
    def tax_number(self):
        """Gets the tax_number of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        税务编号  # noqa: E501

        :return: The tax_number of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._tax_number

    @tax_number.setter
    def tax_number(self, tax_number):
        """Sets the tax_number of this GetCompanyAuditReceiveTasksResponse.

        税务编号  # noqa: E501

        :param tax_number: The tax_number of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._tax_number = tax_number

    @property
    def institution_number(self):
        """Gets the institution_number of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        组织机构编号  # noqa: E501

        :return: The institution_number of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._institution_number

    @institution_number.setter
    def institution_number(self, institution_number):
        """Sets the institution_number of this GetCompanyAuditReceiveTasksResponse.

        组织机构编号  # noqa: E501

        :param institution_number: The institution_number of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._institution_number = institution_number

    @property
    def license_url(self):
        """Gets the license_url of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        营业执照  # noqa: E501

        :return: The license_url of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._license_url

    @license_url.setter
    def license_url(self, license_url):
        """Sets the license_url of this GetCompanyAuditReceiveTasksResponse.

        营业执照  # noqa: E501

        :param license_url: The license_url of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._license_url = license_url

    @property
    def contact_name(self):
        """Gets the contact_name of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        联系人姓名  # noqa: E501

        :return: The contact_name of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._contact_name

    @contact_name.setter
    def contact_name(self, contact_name):
        """Sets the contact_name of this GetCompanyAuditReceiveTasksResponse.

        联系人姓名  # noqa: E501

        :param contact_name: The contact_name of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._contact_name = contact_name

    @property
    def contact_phone(self):
        """Gets the contact_phone of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501

        联系人电话  # noqa: E501

        :return: The contact_phone of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :rtype: str
        """
        return self._contact_phone

    @contact_phone.setter
    def contact_phone(self, contact_phone):
        """Sets the contact_phone of this GetCompanyAuditReceiveTasksResponse.

        联系人电话  # noqa: E501

        :param contact_phone: The contact_phone of this GetCompanyAuditReceiveTasksResponse.  # noqa: E501
        :type: str
        """

        self._contact_phone = contact_phone

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetCompanyAuditReceiveTasksResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetCompanyAuditReceiveTasksResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
