# coding: utf-8

"""
    crush-staff 平台接口（职员管理平台）

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetCompanyAuditListResponseItems(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'account_id': 'str',
        'address': 'str',
        'business_license': 'str',
        'area': 'str',
        'company_name': 'str',
        'logo': 'str',
        'user_name': 'str',
        'nationality_code': 'str',
        'organization_code': 'str',
        'phone_number': 'str',
        'social_code': 'str',
        'tax_number': 'str',
        'reject_type': 'str',
        'rejected_reason': 'str',
        'certification_status': 'str',
        'created_at': 'str',
        'audited_at': 'str',
        'staff_id': 'str',
        'staff_name': 'str'
    }

    attribute_map = {
        'id': 'id',
        'account_id': 'accountId',
        'address': 'address',
        'business_license': 'businessLicense',
        'area': 'area',
        'company_name': 'companyName',
        'logo': 'logo',
        'user_name': 'userName',
        'nationality_code': 'nationalityCode',
        'organization_code': 'organizationCode',
        'phone_number': 'phoneNumber',
        'social_code': 'socialCode',
        'tax_number': 'taxNumber',
        'reject_type': 'rejectType',
        'rejected_reason': 'rejectedReason',
        'certification_status': 'certificationStatus',
        'created_at': 'createdAt',
        'audited_at': 'auditedAt',
        'staff_id': 'staffId',
        'staff_name': 'staffName'
    }

    def __init__(self, id=None, account_id=None, address=None, business_license=None, area=None, company_name=None, logo=None, user_name=None, nationality_code=None, organization_code=None, phone_number=None, social_code=None, tax_number=None, reject_type=None, rejected_reason=None, certification_status=None, created_at=None, audited_at=None, staff_id=None, staff_name=None):  # noqa: E501
        """GetCompanyAuditListResponseItems - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._account_id = None
        self._address = None
        self._business_license = None
        self._area = None
        self._company_name = None
        self._logo = None
        self._user_name = None
        self._nationality_code = None
        self._organization_code = None
        self._phone_number = None
        self._social_code = None
        self._tax_number = None
        self._reject_type = None
        self._rejected_reason = None
        self._certification_status = None
        self._created_at = None
        self._audited_at = None
        self._staff_id = None
        self._staff_name = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if account_id is not None:
            self.account_id = account_id
        if address is not None:
            self.address = address
        if business_license is not None:
            self.business_license = business_license
        if area is not None:
            self.area = area
        if company_name is not None:
            self.company_name = company_name
        if logo is not None:
            self.logo = logo
        if user_name is not None:
            self.user_name = user_name
        if nationality_code is not None:
            self.nationality_code = nationality_code
        if organization_code is not None:
            self.organization_code = organization_code
        if phone_number is not None:
            self.phone_number = phone_number
        if social_code is not None:
            self.social_code = social_code
        if tax_number is not None:
            self.tax_number = tax_number
        if reject_type is not None:
            self.reject_type = reject_type
        if rejected_reason is not None:
            self.rejected_reason = rejected_reason
        if certification_status is not None:
            self.certification_status = certification_status
        if created_at is not None:
            self.created_at = created_at
        if audited_at is not None:
            self.audited_at = audited_at
        if staff_id is not None:
            self.staff_id = staff_id
        if staff_name is not None:
            self.staff_name = staff_name

    @property
    def id(self):
        """Gets the id of this GetCompanyAuditListResponseItems.  # noqa: E501

        工单编号  # noqa: E501

        :return: The id of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetCompanyAuditListResponseItems.

        工单编号  # noqa: E501

        :param id: The id of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def account_id(self):
        """Gets the account_id of this GetCompanyAuditListResponseItems.  # noqa: E501

        请求的uid  # noqa: E501

        :return: The account_id of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GetCompanyAuditListResponseItems.

        请求的uid  # noqa: E501

        :param account_id: The account_id of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def address(self):
        """Gets the address of this GetCompanyAuditListResponseItems.  # noqa: E501

        地址  # noqa: E501

        :return: The address of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this GetCompanyAuditListResponseItems.

        地址  # noqa: E501

        :param address: The address of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def business_license(self):
        """Gets the business_license of this GetCompanyAuditListResponseItems.  # noqa: E501

        营业执照  # noqa: E501

        :return: The business_license of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._business_license

    @business_license.setter
    def business_license(self, business_license):
        """Sets the business_license of this GetCompanyAuditListResponseItems.

        营业执照  # noqa: E501

        :param business_license: The business_license of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._business_license = business_license

    @property
    def area(self):
        """Gets the area of this GetCompanyAuditListResponseItems.  # noqa: E501

        区域  # noqa: E501

        :return: The area of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._area

    @area.setter
    def area(self, area):
        """Sets the area of this GetCompanyAuditListResponseItems.

        区域  # noqa: E501

        :param area: The area of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._area = area

    @property
    def company_name(self):
        """Gets the company_name of this GetCompanyAuditListResponseItems.  # noqa: E501

        企业名  # noqa: E501

        :return: The company_name of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this GetCompanyAuditListResponseItems.

        企业名  # noqa: E501

        :param company_name: The company_name of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._company_name = company_name

    @property
    def logo(self):
        """Gets the logo of this GetCompanyAuditListResponseItems.  # noqa: E501

        企业头像  # noqa: E501

        :return: The logo of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this GetCompanyAuditListResponseItems.

        企业头像  # noqa: E501

        :param logo: The logo of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._logo = logo

    @property
    def user_name(self):
        """Gets the user_name of this GetCompanyAuditListResponseItems.  # noqa: E501

        企业法人名字  # noqa: E501

        :return: The user_name of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this GetCompanyAuditListResponseItems.

        企业法人名字  # noqa: E501

        :param user_name: The user_name of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._user_name = user_name

    @property
    def nationality_code(self):
        """Gets the nationality_code of this GetCompanyAuditListResponseItems.  # noqa: E501

        国家代码  # noqa: E501

        :return: The nationality_code of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._nationality_code

    @nationality_code.setter
    def nationality_code(self, nationality_code):
        """Sets the nationality_code of this GetCompanyAuditListResponseItems.

        国家代码  # noqa: E501

        :param nationality_code: The nationality_code of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._nationality_code = nationality_code

    @property
    def organization_code(self):
        """Gets the organization_code of this GetCompanyAuditListResponseItems.  # noqa: E501

        组织机构代码  # noqa: E501

        :return: The organization_code of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._organization_code

    @organization_code.setter
    def organization_code(self, organization_code):
        """Sets the organization_code of this GetCompanyAuditListResponseItems.

        组织机构代码  # noqa: E501

        :param organization_code: The organization_code of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._organization_code = organization_code

    @property
    def phone_number(self):
        """Gets the phone_number of this GetCompanyAuditListResponseItems.  # noqa: E501

        电话号  # noqa: E501

        :return: The phone_number of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this GetCompanyAuditListResponseItems.

        电话号  # noqa: E501

        :param phone_number: The phone_number of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._phone_number = phone_number

    @property
    def social_code(self):
        """Gets the social_code of this GetCompanyAuditListResponseItems.  # noqa: E501

        社会统一编号  # noqa: E501

        :return: The social_code of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._social_code

    @social_code.setter
    def social_code(self, social_code):
        """Sets the social_code of this GetCompanyAuditListResponseItems.

        社会统一编号  # noqa: E501

        :param social_code: The social_code of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._social_code = social_code

    @property
    def tax_number(self):
        """Gets the tax_number of this GetCompanyAuditListResponseItems.  # noqa: E501

        税务编码  # noqa: E501

        :return: The tax_number of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._tax_number

    @tax_number.setter
    def tax_number(self, tax_number):
        """Sets the tax_number of this GetCompanyAuditListResponseItems.

        税务编码  # noqa: E501

        :param tax_number: The tax_number of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._tax_number = tax_number

    @property
    def reject_type(self):
        """Gets the reject_type of this GetCompanyAuditListResponseItems.  # noqa: E501

        失败类型  # noqa: E501

        :return: The reject_type of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._reject_type

    @reject_type.setter
    def reject_type(self, reject_type):
        """Sets the reject_type of this GetCompanyAuditListResponseItems.

        失败类型  # noqa: E501

        :param reject_type: The reject_type of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """
        allowed_values = ["INDIVIDUAL_ID", "INDIVIDUAL_PASSPORT", "ENTERPRISE_LOGO", "ENTERPRISE_LICENSE", "INDIVIDUAL_ABNORMAL", "ENTERPRISE_ABNORMAL", "USER_REPORT_ABNORMAL"]  # noqa: E501
        if reject_type not in allowed_values:
            raise ValueError(
                "Invalid value for `reject_type` ({0}), must be one of {1}"  # noqa: E501
                .format(reject_type, allowed_values)
            )

        self._reject_type = reject_type

    @property
    def rejected_reason(self):
        """Gets the rejected_reason of this GetCompanyAuditListResponseItems.  # noqa: E501

        拒绝原因  # noqa: E501

        :return: The rejected_reason of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._rejected_reason

    @rejected_reason.setter
    def rejected_reason(self, rejected_reason):
        """Sets the rejected_reason of this GetCompanyAuditListResponseItems.

        拒绝原因  # noqa: E501

        :param rejected_reason: The rejected_reason of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._rejected_reason = rejected_reason

    @property
    def certification_status(self):
        """Gets the certification_status of this GetCompanyAuditListResponseItems.  # noqa: E501

        状态[APPLIED（待审核）、ACCEPTED（通过）、REJECTED（未通过）\"]  # noqa: E501

        :return: The certification_status of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._certification_status

    @certification_status.setter
    def certification_status(self, certification_status):
        """Sets the certification_status of this GetCompanyAuditListResponseItems.

        状态[APPLIED（待审核）、ACCEPTED（通过）、REJECTED（未通过）\"]  # noqa: E501

        :param certification_status: The certification_status of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """
        allowed_values = ["APPLIED", "ACCEPTED", "REJECTED"]  # noqa: E501
        if certification_status not in allowed_values:
            raise ValueError(
                "Invalid value for `certification_status` ({0}), must be one of {1}"  # noqa: E501
                .format(certification_status, allowed_values)
            )

        self._certification_status = certification_status

    @property
    def created_at(self):
        """Gets the created_at of this GetCompanyAuditListResponseItems.  # noqa: E501

        提交申请时间  # noqa: E501

        :return: The created_at of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GetCompanyAuditListResponseItems.

        提交申请时间  # noqa: E501

        :param created_at: The created_at of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def audited_at(self):
        """Gets the audited_at of this GetCompanyAuditListResponseItems.  # noqa: E501

        审核时间  # noqa: E501

        :return: The audited_at of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._audited_at

    @audited_at.setter
    def audited_at(self, audited_at):
        """Sets the audited_at of this GetCompanyAuditListResponseItems.

        审核时间  # noqa: E501

        :param audited_at: The audited_at of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._audited_at = audited_at

    @property
    def staff_id(self):
        """Gets the staff_id of this GetCompanyAuditListResponseItems.  # noqa: E501

        审核用户  # noqa: E501

        :return: The staff_id of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._staff_id

    @staff_id.setter
    def staff_id(self, staff_id):
        """Sets the staff_id of this GetCompanyAuditListResponseItems.

        审核用户  # noqa: E501

        :param staff_id: The staff_id of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._staff_id = staff_id

    @property
    def staff_name(self):
        """Gets the staff_name of this GetCompanyAuditListResponseItems.  # noqa: E501

        用户名  # noqa: E501

        :return: The staff_name of this GetCompanyAuditListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._staff_name

    @staff_name.setter
    def staff_name(self, staff_name):
        """Sets the staff_name of this GetCompanyAuditListResponseItems.

        用户名  # noqa: E501

        :param staff_name: The staff_name of this GetCompanyAuditListResponseItems.  # noqa: E501
        :type: str
        """

        self._staff_name = staff_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetCompanyAuditListResponseItems, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetCompanyAuditListResponseItems):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
