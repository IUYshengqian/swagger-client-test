# coding: utf-8

"""
    crush-main 平台接口（主平台）

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.main.models.get_favoriter_exchange_list_response_markets import GetFavoriterExchangeListResponseMarkets  # noqa: F401,E501


class GetFavoriterExchangeListResponseItems(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'exchange_id': 'str',
        'exchange_logo': 'str',
        'exchange_name': 'str',
        'trading_pair_count': 'str',
        'cny_amount': 'str',
        'usd_amount': 'str',
        'markets': 'list[GetFavoriterExchangeListResponseMarkets]'
    }

    attribute_map = {
        'id': 'id',
        'exchange_id': 'exchangeId',
        'exchange_logo': 'exchangeLogo',
        'exchange_name': 'exchangeName',
        'trading_pair_count': 'tradingPairCount',
        'cny_amount': 'cnyAmount',
        'usd_amount': 'usdAmount',
        'markets': 'markets'
    }

    def __init__(self, id=None, exchange_id=None, exchange_logo=None, exchange_name=None, trading_pair_count=None, cny_amount=None, usd_amount=None, markets=None):  # noqa: E501
        """GetFavoriterExchangeListResponseItems - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._exchange_id = None
        self._exchange_logo = None
        self._exchange_name = None
        self._trading_pair_count = None
        self._cny_amount = None
        self._usd_amount = None
        self._markets = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if exchange_id is not None:
            self.exchange_id = exchange_id
        if exchange_logo is not None:
            self.exchange_logo = exchange_logo
        if exchange_name is not None:
            self.exchange_name = exchange_name
        if trading_pair_count is not None:
            self.trading_pair_count = trading_pair_count
        if cny_amount is not None:
            self.cny_amount = cny_amount
        if usd_amount is not None:
            self.usd_amount = usd_amount
        if markets is not None:
            self.markets = markets

    @property
    def id(self):
        """Gets the id of this GetFavoriterExchangeListResponseItems.  # noqa: E501

        收藏记录ID  # noqa: E501

        :return: The id of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetFavoriterExchangeListResponseItems.

        收藏记录ID  # noqa: E501

        :param id: The id of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def exchange_id(self):
        """Gets the exchange_id of this GetFavoriterExchangeListResponseItems.  # noqa: E501

        交易所Id  # noqa: E501

        :return: The exchange_id of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._exchange_id

    @exchange_id.setter
    def exchange_id(self, exchange_id):
        """Sets the exchange_id of this GetFavoriterExchangeListResponseItems.

        交易所Id  # noqa: E501

        :param exchange_id: The exchange_id of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :type: str
        """

        self._exchange_id = exchange_id

    @property
    def exchange_logo(self):
        """Gets the exchange_logo of this GetFavoriterExchangeListResponseItems.  # noqa: E501

        交易所logo  # noqa: E501

        :return: The exchange_logo of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._exchange_logo

    @exchange_logo.setter
    def exchange_logo(self, exchange_logo):
        """Sets the exchange_logo of this GetFavoriterExchangeListResponseItems.

        交易所logo  # noqa: E501

        :param exchange_logo: The exchange_logo of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :type: str
        """

        self._exchange_logo = exchange_logo

    @property
    def exchange_name(self):
        """Gets the exchange_name of this GetFavoriterExchangeListResponseItems.  # noqa: E501

        交易所名称  # noqa: E501

        :return: The exchange_name of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._exchange_name

    @exchange_name.setter
    def exchange_name(self, exchange_name):
        """Sets the exchange_name of this GetFavoriterExchangeListResponseItems.

        交易所名称  # noqa: E501

        :param exchange_name: The exchange_name of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :type: str
        """

        self._exchange_name = exchange_name

    @property
    def trading_pair_count(self):
        """Gets the trading_pair_count of this GetFavoriterExchangeListResponseItems.  # noqa: E501

        币对数量  # noqa: E501

        :return: The trading_pair_count of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._trading_pair_count

    @trading_pair_count.setter
    def trading_pair_count(self, trading_pair_count):
        """Sets the trading_pair_count of this GetFavoriterExchangeListResponseItems.

        币对数量  # noqa: E501

        :param trading_pair_count: The trading_pair_count of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :type: str
        """

        self._trading_pair_count = trading_pair_count

    @property
    def cny_amount(self):
        """Gets the cny_amount of this GetFavoriterExchangeListResponseItems.  # noqa: E501

        折合人民币总成交量  # noqa: E501

        :return: The cny_amount of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._cny_amount

    @cny_amount.setter
    def cny_amount(self, cny_amount):
        """Sets the cny_amount of this GetFavoriterExchangeListResponseItems.

        折合人民币总成交量  # noqa: E501

        :param cny_amount: The cny_amount of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :type: str
        """

        self._cny_amount = cny_amount

    @property
    def usd_amount(self):
        """Gets the usd_amount of this GetFavoriterExchangeListResponseItems.  # noqa: E501

        USDT总成交量  # noqa: E501

        :return: The usd_amount of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._usd_amount

    @usd_amount.setter
    def usd_amount(self, usd_amount):
        """Sets the usd_amount of this GetFavoriterExchangeListResponseItems.

        USDT总成交量  # noqa: E501

        :param usd_amount: The usd_amount of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :type: str
        """

        self._usd_amount = usd_amount

    @property
    def markets(self):
        """Gets the markets of this GetFavoriterExchangeListResponseItems.  # noqa: E501

        市场  # noqa: E501

        :return: The markets of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :rtype: list[GetFavoriterExchangeListResponseMarkets]
        """
        return self._markets

    @markets.setter
    def markets(self, markets):
        """Sets the markets of this GetFavoriterExchangeListResponseItems.

        市场  # noqa: E501

        :param markets: The markets of this GetFavoriterExchangeListResponseItems.  # noqa: E501
        :type: list[GetFavoriterExchangeListResponseMarkets]
        """

        self._markets = markets

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetFavoriterExchangeListResponseItems, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetFavoriterExchangeListResponseItems):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
