# coding: utf-8

"""
    crush-main 平台接口（主平台）

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.main.models.get_invites_list_response_email_address import GetInvitesListResponseEmailAddress  # noqa: F401,E501


class GetInvitesListResponseItems(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'promoter_id': 'str',
        'account_id': 'str',
        'email_address': 'GetInvitesListResponseEmailAddress'
    }

    attribute_map = {
        'id': 'id',
        'promoter_id': 'promoterId',
        'account_id': 'accountId',
        'email_address': 'emailAddress'
    }

    def __init__(self, id=None, promoter_id=None, account_id=None, email_address=None):  # noqa: E501
        """GetInvitesListResponseItems - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._promoter_id = None
        self._account_id = None
        self._email_address = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if promoter_id is not None:
            self.promoter_id = promoter_id
        if account_id is not None:
            self.account_id = account_id
        if email_address is not None:
            self.email_address = email_address

    @property
    def id(self):
        """Gets the id of this GetInvitesListResponseItems.  # noqa: E501

        自增长id  # noqa: E501

        :return: The id of this GetInvitesListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetInvitesListResponseItems.

        自增长id  # noqa: E501

        :param id: The id of this GetInvitesListResponseItems.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def promoter_id(self):
        """Gets the promoter_id of this GetInvitesListResponseItems.  # noqa: E501

        邀请码id  # noqa: E501

        :return: The promoter_id of this GetInvitesListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._promoter_id

    @promoter_id.setter
    def promoter_id(self, promoter_id):
        """Sets the promoter_id of this GetInvitesListResponseItems.

        邀请码id  # noqa: E501

        :param promoter_id: The promoter_id of this GetInvitesListResponseItems.  # noqa: E501
        :type: str
        """

        self._promoter_id = promoter_id

    @property
    def account_id(self):
        """Gets the account_id of this GetInvitesListResponseItems.  # noqa: E501

        账户id  # noqa: E501

        :return: The account_id of this GetInvitesListResponseItems.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GetInvitesListResponseItems.

        账户id  # noqa: E501

        :param account_id: The account_id of this GetInvitesListResponseItems.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def email_address(self):
        """Gets the email_address of this GetInvitesListResponseItems.  # noqa: E501


        :return: The email_address of this GetInvitesListResponseItems.  # noqa: E501
        :rtype: GetInvitesListResponseEmailAddress
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this GetInvitesListResponseItems.


        :param email_address: The email_address of this GetInvitesListResponseItems.  # noqa: E501
        :type: GetInvitesListResponseEmailAddress
        """

        self._email_address = email_address

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetInvitesListResponseItems, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetInvitesListResponseItems):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
