# coding: utf-8

"""
    crush-main 平台接口（主平台）

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetbindStatuesRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'google_authenticator': 'int',
        'phone_authenticator': 'int',
        'email_authenticator': 'int'
    }

    attribute_map = {
        'google_authenticator': 'googleAuthenticator',
        'phone_authenticator': 'phoneAuthenticator',
        'email_authenticator': 'emailAuthenticator'
    }

    def __init__(self, google_authenticator=None, phone_authenticator=None, email_authenticator=None):  # noqa: E501
        """GetbindStatuesRequest - a model defined in Swagger"""  # noqa: E501

        self._google_authenticator = None
        self._phone_authenticator = None
        self._email_authenticator = None
        self.discriminator = None

        if google_authenticator is not None:
            self.google_authenticator = google_authenticator
        if phone_authenticator is not None:
            self.phone_authenticator = phone_authenticator
        if email_authenticator is not None:
            self.email_authenticator = email_authenticator

    @property
    def google_authenticator(self):
        """Gets the google_authenticator of this GetbindStatuesRequest.  # noqa: E501

        谷歌开启状态  # noqa: E501

        :return: The google_authenticator of this GetbindStatuesRequest.  # noqa: E501
        :rtype: int
        """
        return self._google_authenticator

    @google_authenticator.setter
    def google_authenticator(self, google_authenticator):
        """Sets the google_authenticator of this GetbindStatuesRequest.

        谷歌开启状态  # noqa: E501

        :param google_authenticator: The google_authenticator of this GetbindStatuesRequest.  # noqa: E501
        :type: int
        """

        self._google_authenticator = google_authenticator

    @property
    def phone_authenticator(self):
        """Gets the phone_authenticator of this GetbindStatuesRequest.  # noqa: E501

        电话开启状态  # noqa: E501

        :return: The phone_authenticator of this GetbindStatuesRequest.  # noqa: E501
        :rtype: int
        """
        return self._phone_authenticator

    @phone_authenticator.setter
    def phone_authenticator(self, phone_authenticator):
        """Sets the phone_authenticator of this GetbindStatuesRequest.

        电话开启状态  # noqa: E501

        :param phone_authenticator: The phone_authenticator of this GetbindStatuesRequest.  # noqa: E501
        :type: int
        """

        self._phone_authenticator = phone_authenticator

    @property
    def email_authenticator(self):
        """Gets the email_authenticator of this GetbindStatuesRequest.  # noqa: E501

        邮箱开启状态  # noqa: E501

        :return: The email_authenticator of this GetbindStatuesRequest.  # noqa: E501
        :rtype: int
        """
        return self._email_authenticator

    @email_authenticator.setter
    def email_authenticator(self, email_authenticator):
        """Sets the email_authenticator of this GetbindStatuesRequest.

        邮箱开启状态  # noqa: E501

        :param email_authenticator: The email_authenticator of this GetbindStatuesRequest.  # noqa: E501
        :type: int
        """

        self._email_authenticator = email_authenticator

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetbindStatuesRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetbindStatuesRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
