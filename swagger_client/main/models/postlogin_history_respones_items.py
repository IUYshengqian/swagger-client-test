# coding: utf-8

"""
    crush-main 平台接口（主平台）

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class PostloginHistoryResponesItems(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'login_at': 'str',
        'location': 'str',
        'ip': 'str',
        'logged_in': 'str',
        'equipment_type': 'str',
        'access_side': 'str'
    }

    attribute_map = {
        'id': 'id',
        'login_at': 'loginAt',
        'location': 'location',
        'ip': 'ip',
        'logged_in': 'loggedIn',
        'equipment_type': 'equipmentType',
        'access_side': 'accessSide'
    }

    def __init__(self, id=None, login_at=None, location=None, ip=None, logged_in=None, equipment_type=None, access_side=None):  # noqa: E501
        """PostloginHistoryResponesItems - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._login_at = None
        self._location = None
        self._ip = None
        self._logged_in = None
        self._equipment_type = None
        self._access_side = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if login_at is not None:
            self.login_at = login_at
        if location is not None:
            self.location = location
        if ip is not None:
            self.ip = ip
        if logged_in is not None:
            self.logged_in = logged_in
        if equipment_type is not None:
            self.equipment_type = equipment_type
        if access_side is not None:
            self.access_side = access_side

    @property
    def id(self):
        """Gets the id of this PostloginHistoryResponesItems.  # noqa: E501

        id  # noqa: E501

        :return: The id of this PostloginHistoryResponesItems.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PostloginHistoryResponesItems.

        id  # noqa: E501

        :param id: The id of this PostloginHistoryResponesItems.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def login_at(self):
        """Gets the login_at of this PostloginHistoryResponesItems.  # noqa: E501

        登录时间  # noqa: E501

        :return: The login_at of this PostloginHistoryResponesItems.  # noqa: E501
        :rtype: str
        """
        return self._login_at

    @login_at.setter
    def login_at(self, login_at):
        """Sets the login_at of this PostloginHistoryResponesItems.

        登录时间  # noqa: E501

        :param login_at: The login_at of this PostloginHistoryResponesItems.  # noqa: E501
        :type: str
        """

        self._login_at = login_at

    @property
    def location(self):
        """Gets the location of this PostloginHistoryResponesItems.  # noqa: E501

        登录位置  # noqa: E501

        :return: The location of this PostloginHistoryResponesItems.  # noqa: E501
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this PostloginHistoryResponesItems.

        登录位置  # noqa: E501

        :param location: The location of this PostloginHistoryResponesItems.  # noqa: E501
        :type: str
        """

        self._location = location

    @property
    def ip(self):
        """Gets the ip of this PostloginHistoryResponesItems.  # noqa: E501

        ip地址  # noqa: E501

        :return: The ip of this PostloginHistoryResponesItems.  # noqa: E501
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this PostloginHistoryResponesItems.

        ip地址  # noqa: E501

        :param ip: The ip of this PostloginHistoryResponesItems.  # noqa: E501
        :type: str
        """

        self._ip = ip

    @property
    def logged_in(self):
        """Gets the logged_in of this PostloginHistoryResponesItems.  # noqa: E501

        是否登录成功  # noqa: E501

        :return: The logged_in of this PostloginHistoryResponesItems.  # noqa: E501
        :rtype: str
        """
        return self._logged_in

    @logged_in.setter
    def logged_in(self, logged_in):
        """Sets the logged_in of this PostloginHistoryResponesItems.

        是否登录成功  # noqa: E501

        :param logged_in: The logged_in of this PostloginHistoryResponesItems.  # noqa: E501
        :type: str
        """

        self._logged_in = logged_in

    @property
    def equipment_type(self):
        """Gets the equipment_type of this PostloginHistoryResponesItems.  # noqa: E501

        设备类型  # noqa: E501

        :return: The equipment_type of this PostloginHistoryResponesItems.  # noqa: E501
        :rtype: str
        """
        return self._equipment_type

    @equipment_type.setter
    def equipment_type(self, equipment_type):
        """Sets the equipment_type of this PostloginHistoryResponesItems.

        设备类型  # noqa: E501

        :param equipment_type: The equipment_type of this PostloginHistoryResponesItems.  # noqa: E501
        :type: str
        """

        self._equipment_type = equipment_type

    @property
    def access_side(self):
        """Gets the access_side of this PostloginHistoryResponesItems.  # noqa: E501

        登录的设备  # noqa: E501

        :return: The access_side of this PostloginHistoryResponesItems.  # noqa: E501
        :rtype: str
        """
        return self._access_side

    @access_side.setter
    def access_side(self, access_side):
        """Sets the access_side of this PostloginHistoryResponesItems.

        登录的设备  # noqa: E501

        :param access_side: The access_side of this PostloginHistoryResponesItems.  # noqa: E501
        :type: str
        """

        self._access_side = access_side

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PostloginHistoryResponesItems, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PostloginHistoryResponesItems):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
