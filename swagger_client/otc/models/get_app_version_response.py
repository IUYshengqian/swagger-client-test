# coding: utf-8

"""
    crush-otc 平台接口（法币交易）

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetAppVersionResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'has_new_version': 'bool',
        'version_number': 'int',
        'version_name': 'str',
        'download_url': 'str',
        'app_size': 'str',
        'forced_update': 'bool',
        'log_ch': 'str',
        'log_en': 'str',
        'created_at': 'datetime'
    }

    attribute_map = {
        'has_new_version': 'hasNewVersion',
        'version_number': 'versionNumber',
        'version_name': 'versionName',
        'download_url': 'downloadUrl',
        'app_size': 'appSize',
        'forced_update': 'forcedUpdate',
        'log_ch': 'logCh',
        'log_en': 'logEn',
        'created_at': 'createdAt'
    }

    def __init__(self, has_new_version=None, version_number=None, version_name=None, download_url=None, app_size=None, forced_update=None, log_ch=None, log_en=None, created_at=None):  # noqa: E501
        """GetAppVersionResponse - a model defined in Swagger"""  # noqa: E501

        self._has_new_version = None
        self._version_number = None
        self._version_name = None
        self._download_url = None
        self._app_size = None
        self._forced_update = None
        self._log_ch = None
        self._log_en = None
        self._created_at = None
        self.discriminator = None

        if has_new_version is not None:
            self.has_new_version = has_new_version
        if version_number is not None:
            self.version_number = version_number
        if version_name is not None:
            self.version_name = version_name
        if download_url is not None:
            self.download_url = download_url
        if app_size is not None:
            self.app_size = app_size
        if forced_update is not None:
            self.forced_update = forced_update
        if log_ch is not None:
            self.log_ch = log_ch
        if log_en is not None:
            self.log_en = log_en
        if created_at is not None:
            self.created_at = created_at

    @property
    def has_new_version(self):
        """Gets the has_new_version of this GetAppVersionResponse.  # noqa: E501

        是否有更新  # noqa: E501

        :return: The has_new_version of this GetAppVersionResponse.  # noqa: E501
        :rtype: bool
        """
        return self._has_new_version

    @has_new_version.setter
    def has_new_version(self, has_new_version):
        """Sets the has_new_version of this GetAppVersionResponse.

        是否有更新  # noqa: E501

        :param has_new_version: The has_new_version of this GetAppVersionResponse.  # noqa: E501
        :type: bool
        """

        self._has_new_version = has_new_version

    @property
    def version_number(self):
        """Gets the version_number of this GetAppVersionResponse.  # noqa: E501

        版本号  # noqa: E501

        :return: The version_number of this GetAppVersionResponse.  # noqa: E501
        :rtype: int
        """
        return self._version_number

    @version_number.setter
    def version_number(self, version_number):
        """Sets the version_number of this GetAppVersionResponse.

        版本号  # noqa: E501

        :param version_number: The version_number of this GetAppVersionResponse.  # noqa: E501
        :type: int
        """

        self._version_number = version_number

    @property
    def version_name(self):
        """Gets the version_name of this GetAppVersionResponse.  # noqa: E501

        当前版本  # noqa: E501

        :return: The version_name of this GetAppVersionResponse.  # noqa: E501
        :rtype: str
        """
        return self._version_name

    @version_name.setter
    def version_name(self, version_name):
        """Sets the version_name of this GetAppVersionResponse.

        当前版本  # noqa: E501

        :param version_name: The version_name of this GetAppVersionResponse.  # noqa: E501
        :type: str
        """

        self._version_name = version_name

    @property
    def download_url(self):
        """Gets the download_url of this GetAppVersionResponse.  # noqa: E501

        下载链接  # noqa: E501

        :return: The download_url of this GetAppVersionResponse.  # noqa: E501
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this GetAppVersionResponse.

        下载链接  # noqa: E501

        :param download_url: The download_url of this GetAppVersionResponse.  # noqa: E501
        :type: str
        """

        self._download_url = download_url

    @property
    def app_size(self):
        """Gets the app_size of this GetAppVersionResponse.  # noqa: E501

        软件大小  # noqa: E501

        :return: The app_size of this GetAppVersionResponse.  # noqa: E501
        :rtype: str
        """
        return self._app_size

    @app_size.setter
    def app_size(self, app_size):
        """Sets the app_size of this GetAppVersionResponse.

        软件大小  # noqa: E501

        :param app_size: The app_size of this GetAppVersionResponse.  # noqa: E501
        :type: str
        """

        self._app_size = app_size

    @property
    def forced_update(self):
        """Gets the forced_update of this GetAppVersionResponse.  # noqa: E501

        是否强制更新  # noqa: E501

        :return: The forced_update of this GetAppVersionResponse.  # noqa: E501
        :rtype: bool
        """
        return self._forced_update

    @forced_update.setter
    def forced_update(self, forced_update):
        """Sets the forced_update of this GetAppVersionResponse.

        是否强制更新  # noqa: E501

        :param forced_update: The forced_update of this GetAppVersionResponse.  # noqa: E501
        :type: bool
        """

        self._forced_update = forced_update

    @property
    def log_ch(self):
        """Gets the log_ch of this GetAppVersionResponse.  # noqa: E501

        更新log中文  # noqa: E501

        :return: The log_ch of this GetAppVersionResponse.  # noqa: E501
        :rtype: str
        """
        return self._log_ch

    @log_ch.setter
    def log_ch(self, log_ch):
        """Sets the log_ch of this GetAppVersionResponse.

        更新log中文  # noqa: E501

        :param log_ch: The log_ch of this GetAppVersionResponse.  # noqa: E501
        :type: str
        """

        self._log_ch = log_ch

    @property
    def log_en(self):
        """Gets the log_en of this GetAppVersionResponse.  # noqa: E501

        更新log英文  # noqa: E501

        :return: The log_en of this GetAppVersionResponse.  # noqa: E501
        :rtype: str
        """
        return self._log_en

    @log_en.setter
    def log_en(self, log_en):
        """Sets the log_en of this GetAppVersionResponse.

        更新log英文  # noqa: E501

        :param log_en: The log_en of this GetAppVersionResponse.  # noqa: E501
        :type: str
        """

        self._log_en = log_en

    @property
    def created_at(self):
        """Gets the created_at of this GetAppVersionResponse.  # noqa: E501

        创建时间  # noqa: E501

        :return: The created_at of this GetAppVersionResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GetAppVersionResponse.

        创建时间  # noqa: E501

        :param created_at: The created_at of this GetAppVersionResponse.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetAppVersionResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetAppVersionResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
