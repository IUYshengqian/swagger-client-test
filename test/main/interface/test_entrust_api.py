# coding: utf-8

"""
    crush 平台接口（主平台）

    `crush` 平台接口（主平台）  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: api@crush.team
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pytest
from datetime import datetime, timedelta
import swagger_client.main
from swagger_client.main.api.entrust_api import EntrustApi  # noqa: E501
from swagger_client.main.rest import ApiException
from swagger_client.main.models.post_entrusts_request import PostEntrustsRequest

api = swagger_client.main.api.entrust_api.EntrustApi()

SUCCESS_ID = ""  # 能撤回的ID
FIELDS = ("market_id,price,entrust_type,trade_type,"
          "volume,trigger_price,auto_cancel_at")
entrusts_data = [
    ("123456", "3.2211", "limit", "buy", "12.11", "", ""),
    ("123456", "3.2211", "limit", "sell", "12.11", "", ""),
    ("123456", "", "limit", "sell", "12.11", "", ""),
    ("", "12.0", "limit", "sell", "12.11", "", ""),
    ("123456", "3.2211", "market", "sell", "6", "", ""),
    ("123456", "3.2211", "market", "buy", "7", "", ""),
    ("123456", "3.2211", "profitLoss", "sell", "", "", ""),
    ("123456", "3.2211", "timeLimit", "sell", "10", "",
     (datetime.now() + timedelta(minutes=2)).strftime("%Y-%m-%d %H:%M")),
    ("123456", "3.2211", "profitLoss", "buy", "8", "", ""),
    ("123456", "3.2211", "timeLimit", "buy", "10", "",
     (datetime.now() + timedelta(minutes=2)).strftime("%Y-%m-%d %H:%M"))]


def pytest_namespace():
    return {'email': "", "password": "", "base_token": "", "phone": ""}


class TestEntrustApi:
    """EntrustApi pytest stubs"""

    @pytest.mark.run(order=2)
    def test_entrusts_get(self):
        """Test case for entrusts_get

        获取委托订单列表  # noqa: E501
        """

        result = api.entrusts_get(async_req=True)
        assert result['items']

    @pytest.mark.run(order=3)
    @pytest.mark.parametrize("entrust_id", [SUCCESS_ID, SUCCESS_ID, ""])
    def test_entrusts_id_cancel_post(self, entrust_id):
        """Test case for entrusts_id_cancel_post

        撤消委托单  # noqa: E501
        """
        try:
            api.entrusts_id_cancel_post(entrust_id, async_req=True)
        except ApiException as e:
            if entrust_id:
                assert e.status == 500  # 撤销过的ID会撤销失败
            else:
                assert e.status == 404  # 指定的委托单不存在

    @pytest.mark.run(order=4)
    def test_entrusts_list_exchange_get(self):
        """Test case for entrusts_list_exchange_get

        获取本人以前交易过的交易所列表  # noqa: E501
        """
        result = api.trades_get()
        assert result['items']

    @pytest.mark.run(order=1)
    @pytest.mark.parametrize(FIELDS, entrusts_data)
    def test_entrusts_post(self, market_id, price, entrust_type, trade_type,
                           volume, trigger_price, auto_cancel_at):
        """Test case for entrusts_post

        创建委托单  # noqa: E501
        """
        payload = PostEntrustsRequest()
        payload.market_id = market_id
        payload.price = price
        payload.entrust_type = entrust_type
        payload.trade_type = trade_type
        payload.trigger_price = trigger_price
        payload.volume = volume
        payload.auto_cancel_at = auto_cancel_at
        try:
            api.entrusts_post(body=payload, async_req=True)
        except ApiException as e:
            if price == '' or market_id == '':
                assert e.status == 400

    @pytest.mark.run(order=5)
    def test_trades_get(self):
        """Test case for trades_get

        获取成交记录列表  # noqa: E501
        """
        result = api.trades_get(async_req=True)
        assert result['items']
