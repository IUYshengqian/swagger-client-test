# coding: utf-8

"""
    crush 平台接口（用户管理后台端）

    `crush` 平台接口（后台端）  当前接口为 `staff` 端  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: api@crush.team
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
from datetime import datetime, timedelta

import pytest
import json
import swagger_client.staff
from swagger_client.staff.api.asset_management_api import AssetManagementApi  # noqa: E501
from swagger_client.staff.rest import ApiException

START = 0
api = swagger_client.staff.api.asset_management_api.AssetManagementApi()


class TestAssetManagementApi:
    """AssetManagementApi pytest stubs"""

    def test_asset_password_reset_id_put(self):
        """Test case for asset_password_reset_id_put

        重置资金密码  # noqa: E501
        """
        pass

    def test_assets_id_get(self):
        """Test case for assets_id_get

        获取账户资产  # noqa: E501
        """
        pass

    def test_assets_restriction_get(self):
        """Test case for assets_restriction_get

        查询资产限制的用户  # noqa: E501
        """
        pass

    def test_assets_restriction_id_delete(self):
        """Test case for assets_restriction_id_delete

        删除用户的资产限制  # noqa: E501
        """
        pass

    def test_assets_restriction_id_get(self):
        """Test case for assets_restriction_id_get

        获取用户的资产限制信息  # noqa: E501
        """
        pass

    def test_assets_restriction_id_put(self):
        """Test case for assets_restriction_id_put

        设置用户的资产限制  # noqa: E501
        """
        pass

    def test_assets_withdraw_address_get(self):
        """Test case for assets_withdraw_address_get

        获取提币地址  # noqa: E501
        """
        pass

    @pytest.mark.parametrize('account_id', ['kingli', '', 234])
    def test_commission_account_id_get(self, account_id):
        """Test case for commission_account_id_get

        账户返佣统计  # noqa: E501
        """
        assert len(account_id) in [i for i in range(2, 17)]
        try:
            api.commission_account_id_get(account_id, async_req=True)
        except ApiException as e:
            if not isinstance(account_id, str) or account_id == '':
                assert e.status == 404

    @pytest.mark.parametrize("orderid", ['1234'])
    @pytest.mark.parametrize("accountid", ['kingli', '', 334])
    @pytest.mark.parametrize("startat",
                             [(datetime.now() - timedelta(minutes=i)).strftime("%Y-%m-%d %H:%M") for i in
                              range(-2, START)])
    @pytest.mark.parametrize('endat', [datetime.now().strftime("%Y-%m-%d %H:%M")])
    @pytest.mark.parametrize('page', [i for i in range(10)])
    def test_commission_get(self, startat, endat, accountid, orderid, page):
        """Test case for commission_get

        交易返佣管理  # noqa: E501
        """
        body = {
            "startAt": startat,
            "endAt": endat,
            "accountId": accountid,
            "orderId": orderid,
            "page": page
        }
        try:
            api.commission_get(**body, sync_req=True)
        except ApiException as e:
            if not isinstance(accountid, str) or accountid == '':
                assert e.status == 404

    def test_get_recharge_list(self):
        """Test case for get_recharge_list

        获取充币记录  # noqa: E501
        """
        pass

    def test_get_withdraw_list(self):
        """Test case for get_withdraw_list

        获取提币记录  # noqa: E501
        """
        pass

    def test_journals_get(self):
        """Test case for journals_get

        获取收支记录  # noqa: E501
        """
        pass

    def test_orders_details_id_get(self):
        """Test case for orders_details_id_get

        获取订单详情  # noqa: E501
        """
        pass

    def test_orders_get(self):
        """Test case for orders_get

        获取订单列表  # noqa: E501
        """
        pass

    def test_revenue_get(self):
        """Test case for revenue_get

        查询平台收支  # noqa: E501
        """
        pass

    def test_withdraw_id_first_audit_post(self):
        """Test case for withdraw_id_first_audit_post

        提币初审  # noqa: E501
        """
        pass

    def test_withdraw_id_second_audit_post(self):
        """Test case for withdraw_id_second_audit_post

        提币复审  # noqa: E501
        """
        pass

    def test_withdraw_records_id_get(self):
        """Test case for withdraw_records_id_get

        获取提币记录  # noqa: E501
        """
        pass
